{"name":"koa-bodyparser","version":"2.2.0","description":"a body parser for koa","main":"index.js","scripts":{"test":"make test"},"repository":{"type":"git","url":"git://github.com/koajs/bodyparser.git"},"files":["index.js"],"keywords":["bodyParser","json","urlencoded","koa","body"],"author":{"name":"dead_horse","email":"dead_horse@qq.com","url":"http://deadhorse.me"},"license":"MIT","bugs":{"url":"https://github.com/koajs/body-parser/issues"},"homepage":"https://github.com/koajs/body-parser","devDependencies":{"autod":"2.4.2","istanbul":"^0.4.3","koa":"^1.2.0","mocha":"^2.4.5","should":"^8.3.1","supertest":"~0.9.0"},"dependencies":{"co-body":"^4.2.0","copy-to":"^2.0.1"},"readme":"koa-bodyparser\n===============\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![node version][node-image]][node-url]\n[![Gittip][gittip-image]][gittip-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-bodyparser.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-bodyparser\n[travis-image]: https://img.shields.io/travis/koajs/bodyparser.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/bodyparser\n[coveralls-image]: https://img.shields.io/coveralls/koajs/bodyparser.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/bodyparser?branch=master\n[david-image]: https://img.shields.io/david/koajs/bodyparser.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/bodyparser\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.11-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[gittip-image]: https://img.shields.io/gittip/dead-horse.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/dead-horse/\n\n\nA body parser for koa, base on [co-body](https://github.com/tj/co-body). support `json`, `form` and `text` type body.\n\n## Install\n\n[![NPM](https://nodei.co/npm/koa-bodyparser.png?downloads=true)](https://nodei.co/npm/koa-bodyparser/)\n\n## Usage\n\n```js\nvar koa = require('koa');\nvar bodyParser = require('koa-bodyparser');\n\nvar app = koa();\napp.use(bodyParser());\n\napp.use(function *() {\n  // the parsed body will store in this.request.body\n  // if nothing was parsed, body will be an empty object {}\n  this.body = this.request.body;\n});\n```\n\n## Options\n\n* **enableTypes**: parser will only parse when request type hits enableTypes, default is `['json', 'form']`.\n* **encode**: requested encoding. Default is `utf-8` by `co-body`.\n* **formLimit**: limit of the `urlencoded` body. If the body ends up being larger than this limit, a 413 error code is returned. Default is `56kb`.\n* **jsonLimit**: limit of the `json` body. Default is `1mb`.\n* **textLimit**: limit of the `text` body. Default is `1mb`.\n* **strict**: when set to true, JSON parser will only accept arrays and objects. Default is `true`. See [strict mode](https://github.com/cojs/co-body#options) in `co-body`. In strict mode, `this.request.body` will always be an object(or array), this avoid lots of type judging. But text body will always return string type.\n* **detectJSON**: custom json request detect function. Default is `null`.\n\n  ```js\n  app.use(bodyparser({\n    detectJSON: function (ctx) {\n      return /\\.json$/i.test(ctx.path);\n    }\n  }));\n  ```\n\n* **extendTypes**: support extend types:\n\n  ```js\n  app.use(bodyparser({\n    extendTypes: {\n      json: ['application/x-javascript'] // will parse application/x-javascript type body as a JSON string\n    }\n  }));\n  ```\n\n* **onerror**: support custom error handle, if `koa-bodyparser` throw an error, you can customize the response like:\n\n  ```js\n  app.use(bodyparser({\n    onerror: function (err, ctx) {\n      ctx.throw('body parse error', 422);\n    }\n  }));\n  ```\n\n## Koa 2 Support\n\nTo use `koa-bodyparser` with koa@2, please use\n\n```bash\nnpm install koa-bodyparser@next --save\n```\n\n## Licences\n\n[MIT](LICENSE)\n","readmeFilename":"README.md","_id":"koa-bodyparser@2.2.0","_shasum":"22c56cde53781dea0df7f075ddd20fe0a7c53037","_resolved":"https://registry.npmjs.org/koa-bodyparser/-/koa-bodyparser-2.2.0.tgz","_from":"https://registry.npmjs.org/koa-bodyparser/-/koa-bodyparser-2.2.0.tgz"}